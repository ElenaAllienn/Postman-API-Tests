{
	"info": {
		"_postman_id": "49e11573-0a52-4d7a-9c80-bcd52f279e42",
		"name": "TaskBoard_API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "8124914"
	},
	"item": [
		{
			"name": "Boards",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "List all boards",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check if status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Check if response type is json\", function () {\r",
											"    pm.response.to.be.json;\r",
											"    const respBody = pm.response.json();\r",
											"    pm.expect(typeof(respBody)).to.be.equal(\"object\");\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://taskboardjs.elenaallienn.repl.co/api/boards",
									"protocol": "https",
									"host": [
										"taskboardjs",
										"elenaallienn",
										"repl",
										"co"
									],
									"path": [
										"api",
										"boards"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Tasks",
			"item": [
				{
					"name": "Board",
					"item": [
						{
							"name": "List all done tasks",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check if the status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Check if all tasks are with status done\" , function(){\r",
											"    const respBody = pm.response.json();\r",
											"\r",
											"    for(let i=0; i < respBody.length; i++){\r",
											"        pm.expect(respBody[i].board.name, \"Board name property\").to.be.equal(\"Done\");\r",
											"\r",
											"    };\r",
											"        //console.log(respBody);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://taskboardjs.elenaallienn.repl.co/api/tasks/board/done",
									"protocol": "https",
									"host": [
										"taskboardjs",
										"elenaallienn",
										"repl",
										"co"
									],
									"path": [
										"api",
										"tasks",
										"board",
										"done"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Task",
					"item": [
						{
							"name": "POST",
							"item": [
								{
									"name": "Create task",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Check if the status code is 201 or 202\", function () {\r",
													"    pm.expect(pm.response.code, \"Status code property\").to.be.oneOf([201, 202]);\r",
													"\r",
													"    const respBody = pm.response.json();\r",
													"    pm.environment.set(\"taskId\", respBody.task.id);\r",
													"    //console.log(respBody);\r",
													"\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"title\": \"{{$randomCity}}\",\r\n    \"description\": \"API + UI tests\",\r\n    \"board\": \"Open\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://taskboardjs.elenaallienn.repl.co/api/tasks",
											"protocol": "https",
											"host": [
												"taskboardjs",
												"elenaallienn",
												"repl",
												"co"
											],
											"path": [
												"api",
												"tasks"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "PATCH",
							"item": [
								{
									"name": "Update task title",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Check if the status code is 201 or 202\", function () {\r",
													"    pm.expect(pm.response.code, \"Status code property\").to.be.oneOf([201, 202]);\r",
													"});\r",
													"\r",
													"pm.test(\"Update task title\", function(){\r",
													"const respBody = pm.response.json();\r",
													"pm.expect(respBody.task.title, \"Title property\").to.be.equal(\"Edited\");\r",
													"});\r",
													"pm.test(\"Check that it's not empty string \", function(){\r",
													"const respBody = pm.response.json();\r",
													"pm.expect(respBody.task.title, \"Title property hasn't empty string\").to.be.not.empty;\r",
													"pm.expect(typeof(respBody.task.title)).to.be.equal(\"string\");\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"title\": \"Edited\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://taskboardjs.elenaallienn.repl.co/api/tasks/{{taskId}}",
											"protocol": "https",
											"host": [
												"taskboardjs",
												"elenaallienn",
												"repl",
												"co"
											],
											"path": [
												"api",
												"tasks",
												"{{taskId}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "DELETE",
							"item": [
								{
									"name": "Delete task",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Check if the task can be deleted\", function(){\r",
													"const respBody = pm.response.json();\r",
													"pm.expect(respBody.msg, \"MSG property\").to.be.equal(\"Task deleted: \" + pm.environment.get(\"taskId\"));\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"title\": \"Edited\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://taskboardjs.elenaallienn.repl.co/api/tasks/{{taskId}}",
											"protocol": "https",
											"host": [
												"taskboardjs",
												"elenaallienn",
												"repl",
												"co"
											],
											"path": [
												"api",
												"tasks",
												"{{taskId}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		}
	]
}